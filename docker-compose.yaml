version: "3"

networks:
  monitoring:


volumes:
  prometheus:
  grafana:
  alertmanager-data:


services:

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    privileged: true
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    depends_on:
      - loki
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  renderer:
    image: grafana/grafana-image-renderer:3.7.1
    container_name: renderer
    privileged: true
    ports:
      - "8081:8081"
    environment:
      - ENABLE_METRICS="true"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  promtail:
    image: grafana/promtail:2.8.2
    container_name: promtail
    privileged: true
    volumes:
      - /var/log/:/var/log/
      - ./config:/etc/promtail/
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  loki:
    image: grafana/loki:2.8.2
    container_name: loki
    privileged: true
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.8.2-amd64
    container_name: fluent-bit
    privileged: true
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./config:/fluent-bit/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  prometheus:
    image: prom/prometheus:v2.43.1
    container_name: prometheus
    privileged: true
    ports:
      - 9090:9090
    volumes:
      - ./config:/etc/prometheus
      - prometheus:/prometheus
    command:
      [
        '--config.file=/etc/prometheus/prometheus.yaml',
        '--storage.tsdb.path=/prometheus',
        '--enable-feature=remote-write-receiver',
        '--query.lookback-delta=30s'
      ]
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  # alertmanager to enable receiving alerts
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    privileged: true
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./config:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    privileged: true
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor-amd64:v0.47.1
    container_name: cadvisor
    privileged: true
    restart: always
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  prometheusalert:
    image: feiyu563/prometheus-alert:latest
    container_name: prometheusalert
    privileged: true
    restart: unless-stopped
    ports:
      - "8082:8080"
    env_file:
      - .env
    environment:
      - PA_LOGIN_USER=prometheusalert
      - PA_LOGIN_PASSWORD=prometheusalert
      - PA_TITLE=PrometheusAlert
      - PA_OPEN_FEISHU=1
      - PA_OPEN_TG=1
      - PA_TG_MODE_CHAN=1
    networks:
      - monitoring
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
