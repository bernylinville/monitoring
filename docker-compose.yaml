version: "3"

networks:
  monitoring:


volumes:
  prometheus:
  grafana:
  alertmanager-data:


services:

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
      - loki
    privileged: true
    ports:
      - 3000:3000
    env_file:
      - .env
    volumes:
      - ./config/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana:/var/lib/grafana
    networks:
      - monitoring
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: "http://loki:3100/loki/api/v1/push"

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    privileged: true
    restart: always
    depends_on:
      - cadvisor
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
        - '--web.enable-lifecycle'
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.8.2
    container_name: promtail
    privileged: true
    restart: always
    volumes:
      - ./loki/:/var/log/
      - ./config:/etc/promtail/
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - monitoring

  loki:
    image: grafana/loki:2.8.2
    container_name: loki
    privileged: true
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/loki.yaml
    networks:
      - monitoring

  # alertmanager to enable receiving alerts
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    privileged: true
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - ./config:/config
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    privileged: true
    restart: always
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor-amd64:v0.47.1
    container_name: cadvisor
    privileged: true
    restart: always
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - 8081:8080
    networks:
      - monitoring
